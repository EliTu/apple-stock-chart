{"version":3,"sources":["styles/styled.tsx","components/UI/Overview.tsx","components/UI/CustomTooltip.tsx","utils/utils.ts","styles/themeColors.ts","components/StockChart.tsx","components/errors/ErrorModal.tsx","assets/spinner.svg","components/UI/Loader.tsx","components/TimeToggle.tsx","App.tsx","components/errors/ErrorBoundary.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledResponsiveContainer","styled","div","StyledMainContainer","StyledOverviewContainer","theme","grey_pale","link_blue","StyledCenteredDiv","StyledErrorModal","error_red","main_white","StyledTimeToggleContainer","StyledTimeButton","button","isSelected","stroke_blue","pale_blue","isLoading","secondary_blue","StyledTooltipContainer","shadow_pale","StyledTooltipLine","span","StyledClickableSpan","main_blue","StyledSvgImage","img","Overview","href","target","rel","CustomTooltip","active","payload","length","Close","Date","Time","setUrlParamsBy","period","precision","formatStringByLength","value","end","slice","THEME_COLORS","StockChart","data","xAxisDisplayBy","isError","isLoadingData","formattedChartData","map","StartTime","StartDate","formattedTime","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","style","filter","cursor","CartesianGrid","strokeDasharray","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","tickMargin","fontSize","YAxis","domain","tickCount","allowDecimals","Area","type","stroke","fill","fillOpacity","Tooltip","isAnimationActive","content","ErrorModal","error","Loader","src","SpinnerSvg","alt","TIME_DATA","timeUnits","amount","label","TimeToggle","setTimeData","timeData","handleButtonClick","clickedButtonLabel","currentTarget","innerHTML","clickedButton","find","isButtonSelected","onClick","App","useState","stockData","setStockData","setIsLoadingData","setError","fetchApiData","useCallback","a","axios","get","status","message","useEffect","test","ErrorBoundary","state","hasError","errorInfo","console","this","window","location","reload","props","children","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEaA,EAA4BC,IAAOC,IAAV,8EAMzBC,EAAsBF,YAAOD,EAAPC,CAAH,sMAQnBG,EAA0BH,YAAOD,EAAPC,CAAH,mSAYzB,qBAAGI,MAAkBC,aAIpB,qBAAGD,MAAkBE,aAKpBC,EAAoBP,IAAOC,IAAV,6HAOjBO,EAAmBR,IAAOC,IAAV,+LAOR,qBAAGG,MAAkBK,aAChC,qBAAGL,MAAkBM,cAIlBC,EAA4BX,IAAOC,IAAV,sGAOzBW,EAAmBZ,IAAOa,OAAV,sPASX,gBAAGC,EAAH,EAAGA,WAAYV,EAAf,EAAeA,MAAf,OAChBU,EAAU,oBACMV,EAAMW,aADZ,oBAEMX,EAAMY,cAEH,gBAAGC,EAAH,EAAGA,UAAWb,EAAd,EAAcA,MAAd,OACnBa,EAAYb,EAAMc,eAAiB,MAEf,qBAAGd,MAAkBY,aAI9BG,EAAyBnB,IAAOC,IAAV,mRAOxB,gBAAGG,EAAH,EAAGA,MAAH,0BAA4BA,EAAMgB,gBACxB,qBAAGhB,MAAkBc,kBAChC,qBAAGd,MAAkBM,cACf,gBAAGN,EAAH,EAAGA,MAAH,wBAA0BA,EAAMC,cAKnCgB,EAAoBrB,IAAOsB,KAAV,iFAKjBC,EAAsBvB,IAAOsB,KAAV,qIACtB,qBAAGlB,MAAkBE,aAKpB,qBAAGF,MAAkBoB,aAInBC,EAAiBzB,IAAO0B,IAAV,oD,OC7FZC,MAnBf,WACC,OACC,eAACxB,EAAD,WACC,4CACA,0CAEC,mBACCyB,KAAK,gDACLC,OAAO,SACPC,IAAI,aAHL,yBAFD,W,8DCcYC,MAhBf,YAAqE,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,QAChC,IAAKD,KAAU,OAACC,QAAD,IAACA,OAAD,EAACA,EAASC,QAAQ,OAAO,KAExC,MAAyCD,EAAQ,GAAGA,QAA5CE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KACrB,OACC,eAAClB,EAAD,WACC,eAACE,EAAD,WACC,2CADD,IACoBe,EADpB,IAC2BC,KAE3B,eAAChB,EAAD,WACC,uCADD,IACgBc,SCZNG,EAAiB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,UAGxC,MAFkB,+JAA2JD,EAA3J,sBAA+KC,EAA/K,sLAKNC,EAAuB,SAACC,EAAeC,GAAhB,OACnCD,EAAME,MAAM,EAAGD,ICTHE,EAAe,CAC3BnC,WAAY,YACZU,YAAa,YACbf,UAAW,YACXmB,UAAW,YACXN,eAAgB,YAChBF,UAAW,YACXD,YAAa,YACbT,UAAW,YACXG,UAAW,aCKG,SAASqC,EAAT,GAKM,IAJpBC,EAImB,EAJnBA,KACAC,EAGmB,EAHnBA,eACAC,EAEmB,EAFnBA,QACAC,EACmB,EADnBA,cAEMC,EAAkCJ,EAAKK,KAC5C,YAAsC,IAAnCjB,EAAkC,EAAlCA,MAAOkB,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACdC,EAAgBd,EAAqBY,GAAY,GAEvD,MAAO,CACNjB,KAFqBK,EAAqBa,GAAY,GAGtDjB,KAAMkB,EACNpB,YAKH,OACC,cAACqB,EAAA,EAAD,CAAqBC,MAAM,MAAMC,OAAQ,IAAzC,SACC,eAACC,EAAA,EAAD,CACCC,OAAQ,CACPC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAETjB,KAAMI,EACNc,MAAO,CACNC,OAAQjB,GAAWC,EAAgB,gBAAkB,GACrDiB,OAAQ,aAVV,UAaC,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,+BACC,iCAAgBC,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACC,sBACCC,OAAO,MACPC,UAAW/B,EAAarB,UACxBqD,YAAa,KAEd,sBACCF,OAAO,MACPC,UAAW/B,EAAanC,WACxBmE,YAAa,UAIhB,cAACC,EAAA,EAAD,CACCC,QAA4B,SAAnB/B,EAA4B,OAAS,OAC9CgC,WAAY,EACZC,SAAU,KAEX,cAACC,EAAA,EAAD,CACCH,QAAQ,QACRI,OAAQ,CAAC,UAAW,WACpBC,UAAW,EACXJ,WAAY,EACZK,eAAe,EACfJ,SAAU,KAEX,cAACK,EAAA,EAAD,CACCC,KAAK,WACLR,QAAQ,QACRS,OAAQ3C,EAAa9B,YACrB0E,KAAK,gBACLC,YAAa,MAEZzC,IAAYC,GACb,cAACyC,EAAA,EAAD,CAASC,mBAAmB,EAAOC,QAAS9D,SC1ElC+D,MANf,YAAiD,IAA3BC,EAA0B,EAA1BA,MACrB,OAAOA,EACN,eAACvF,EAAD,2CAAgDuF,KAC7C,MCNU,MAA0B,oCCO1BC,MAJf,WACC,OAAO,cAACvE,EAAD,CAAgBwE,IAAKC,EAAYC,IAAI,oBCGvCC,GAAwB,CAC7B,CAAEC,UAAW,UAAWC,OAAQ,IAAKC,MAAO,SAC5C,CAAEF,UAAW,UAAWC,OAAQ,IAAKC,MAAO,UAC5C,CAAEF,UAAW,QAASC,OAAQ,IAAKC,MAAO,UAC1C,CAAEF,UAAW,QAASC,OAAQ,MAAOC,MAAO,WAuC9BC,OApCf,YAI8B,IAH7BC,EAG4B,EAH5BA,YACAC,EAE4B,EAF5BA,SACAxD,EAC4B,EAD5BA,cAEMyD,EAAoB,SAAC,GAEe,IACnCC,EADkC,EADxCC,cAEyCC,UACnCC,EAAgBX,GAAUY,MAC/B,qBAAGT,QAAsBK,KAGtBG,GAAiBA,EAAcR,QAAUG,EAASH,OACrDE,EAAYM,IAGd,OACC,cAACpG,EAAD,UACEyF,GAAUhD,KAAI,YAAgB,IAAbmD,EAAY,EAAZA,MACXU,EAAmBP,EAASH,QAAUA,EAC5C,OACC,cAAC3F,EAAD,CACCE,WAAYmG,EACZhG,UAAWgG,GAAoB/D,EAE/BgE,QAASP,EAJV,SAMEzD,GAAiB+D,EAAmB,cAAC,EAAD,IAAaV,GAH7CA,SCgCIY,OAzDf,WACC,MAAkCC,mBAAuB,IAAzD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,oBAAkB,GAA5D,mBAAOlE,EAAP,KAAsBqE,EAAtB,KACA,EAA0BH,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcyB,EAAd,KACA,EAAgCJ,mBAAmB,CAClDf,UAAW,UACXC,OAAQ,IACRC,MAAO,UAHR,mBAAOG,EAAP,KAAiBD,EAAjB,KAMMgB,EAAeC,sBAAW,sBAAC,8BAAAC,EAAA,+EAEAC,IAAMC,IACpCvF,EAAe,CACdE,UAAWkE,EAASL,UACpB9D,OAAQmE,EAASJ,UALY,gBAEvBvD,EAFuB,EAEvBA,KAOO,MATgB,EAEjB+E,QAOQ/E,EAAKb,SAC1BoF,GAAa,kBAAMvE,KACnBwE,GAAiB,kBAAM,KACvBC,EAAS,KAZqB,gDAe/BA,EAAS,KAAMO,SACfR,GAAiB,GAhBc,yDAkB9B,CAACb,EAASJ,OAAQI,EAASL,YAM9B,OAJA2B,qBAAU,WACTP,MACE,CAACA,IAGH,cAAC,IAAD,CAAerH,MAAOyC,EAAtB,SACC,eAAC3C,EAAD,WACC,cAAC,EAAD,CAAY6F,MAAOA,IACnB,cAAC,EAAD,IACA,cAAC,GAAD,CACCU,YAAaA,EACbC,SAAUA,EACVxD,cAAeA,IAEhB,cAACJ,EAAD,CACCC,KAAMsE,EACNnE,cAAeA,EACfD,UAAW8C,EACX/C,eACC0D,EAASH,OAAS,SAAS0B,KAAKvB,EAASH,OAAS,OAAS,e,wCCxDpD2B,GAAb,+MACCC,MAAQ,CAAEC,UAAU,GADrB,wDAOC,SAAkBrC,EAAYsC,GAC7BC,QAAQvC,MAAMsC,KARhB,oBAWC,WACC,OAAIE,KAAKJ,MAAMC,SAEb,cAACrI,EAAD,UACC,eAACQ,EAAD,WACC,iEACA,wCACQ,IACP,cAACgB,EAAD,CAAqB2F,QAAS,kBAAMsB,OAAOC,SAASC,UAApD,qBAEuB,IAJxB,2CAYGH,KAAKI,MAAMC,YA7BpB,uCAGC,SAAgC7C,GAC/B,MAAO,CAAEqC,UAAU,OAJrB,GAAmCS,IAAMC,WCO1BC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,UACC,cAAC,GAAD,QAGFC,SAASC,eAAe,SAMzBb,O","file":"static/js/main.807f1ba7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledResponsiveContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0rem;\n`;\n\nexport const StyledMainContainer = styled(StyledResponsiveContainer)`\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\n\tposition: relative;\n`;\n\nexport const StyledOverviewContainer = styled(StyledResponsiveContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0 0 1rem 0.5rem;\n\n\tdiv {\n\t\tfont-size: 28px;\n\t\tfont-weight: 800;\n\t\tmargin-bottom: 0.1rem;\n\t}\n\n\tspan {\n\t\tcolor: ${({ theme }) => theme.grey_pale};\n\n\t\ta {\n\t\t\ttext-decoration: none;\n\t\t\tcolor: ${({ theme }) => theme.link_blue};\n\t\t}\n\t}\n`;\n\nexport const StyledCenteredDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const StyledErrorModal = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 40%;\n\twidth: auto;\n\theight: auto;\n\tpadding: 1rem;\n\tbackground-color: ${({ theme }) => theme.error_red};\n\tcolor: ${({ theme }) => theme.main_white};\n\tborder-radius: 3px;\n`;\n\nexport const StyledTimeToggleContainer = styled.div`\n\theight: 2rem;\n\twidth: 30%;\n\tmargin-left: 4.4rem;\n\tdisplay: flex;\n`;\n\nexport const StyledTimeButton = styled.button<{\n\tisSelected: boolean;\n\tisLoading: boolean;\n}>`\n\theight: 100%;\n\twidth: 50%;\n\tcursor: pointer;\n\tbackground: none;\n\tborder: none;\n\tborder-bottom: ${({ isSelected, theme }) =>\n\t\tisSelected\n\t\t\t? `4px solid ${theme.stroke_blue}`\n\t\t\t: `2px solid ${theme.pale_blue}`};\n\ttransition: all 0.2s ease-in;\n\tbackground-color: ${({ isLoading, theme }) =>\n\t\tisLoading ? theme.secondary_blue : ''};\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.pale_blue};\n\t}\n`;\n\nexport const StyledTooltipContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\theight: auto;\n\twidth: 100%;\n\tpadding: 0.3rem;\n\tborder: ${({ theme }) => `1px solid ${theme.shadow_pale}`};\n\tbackground-color: ${({ theme }) => theme.secondary_blue};\n\tcolor: ${({ theme }) => theme.main_white};\n\ttext-shadow: ${({ theme }) => `0 0 1px ${theme.grey_pale}`};\n\tfont-size: 14px;\n\tborder-radius: 3px;\n`;\n\nexport const StyledTooltipLine = styled.span`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nexport const StyledClickableSpan = styled.span`\n\tcolor: ${({ theme }) => theme.link_blue};\n\ttransition: all 0.2s ease-in;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.main_blue};\n\t}\n`;\n\nexport const StyledSvgImage = styled.img`\n\tmargin-left: 0.5rem;\n`;\n","import { StyledOverviewContainer } from '../../styles/styled';\n\nfunction Overview() {\n\treturn (\n\t\t<StyledOverviewContainer>\n\t\t\t<div>Apple Inc</div>\n\t\t\t<span>\n\t\t\t\tAAPL (\n\t\t\t\t<a\n\t\t\t\t\thref='https://www.fxempire.com/stock-exchanges/xnas'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noreferrer'\n\t\t\t\t>\n\t\t\t\t\tNasdaq - US\n\t\t\t\t</a>\n\t\t\t\t)\n\t\t\t</span>\n\t\t</StyledOverviewContainer>\n\t);\n}\n\nexport default Overview;\n","import { TooltipProps } from 'recharts';\nimport { ChartData } from '../../utils/interfaces';\nimport { StyledTooltipContainer, StyledTooltipLine } from '../../styles/styled';\n\nfunction CustomTooltip({ active, payload }: TooltipProps<any, any>) {\n\tif (!active || !payload?.length) return null;\n\n\tconst { Close, Date, Time }: ChartData = payload[0].payload;\n\treturn (\n\t\t<StyledTooltipContainer>\n\t\t\t<StyledTooltipLine>\n\t\t\t\t<b>Date/Time:</b> {Date} {Time}\n\t\t\t</StyledTooltipLine>\n\t\t\t<StyledTooltipLine>\n\t\t\t\t<b>Close:</b> {Close}\n\t\t\t</StyledTooltipLine>\n\t\t</StyledTooltipContainer>\n\t);\n}\n\nexport default CustomTooltip;\n","import { FetchDataParams } from './interfaces';\n\nexport const setUrlParamsBy = ({ period, precision }: FetchDataParams) => {\n\tconst augmentedUrl = `https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=${period}&Precision=${precision}&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume`;\n\n\treturn augmentedUrl;\n};\n\nexport const formatStringByLength = (value: string, end: number) =>\n\tvalue.slice(0, end);\n","export const THEME_COLORS = {\n\tmain_white: '#ebebebeb',\n\tshadow_pale: '#adcaf790',\n\tgrey_pale: '#6e6e6ef4',\n\tmain_blue: '#063cebcf',\n\tsecondary_blue: '#161aec96',\n\tpale_blue: '#7476ff55',\n\tstroke_blue: '#080185f0',\n\tlink_blue: '#686bf7ca',\n\terror_red: '#f333339b',\n};\n\ndeclare module 'styled-components' {\n\ttype Theme = typeof THEME_COLORS;\n\texport interface DefaultTheme extends Theme {}\n}\n","import {\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tTooltip,\n\tCartesianGrid,\n\tResponsiveContainer,\n} from 'recharts';\nimport CustomTooltip from './UI/CustomTooltip';\nimport { ChartData, StockChartProps } from '../utils/interfaces';\nimport { formatStringByLength } from '../utils/utils';\nimport { THEME_COLORS } from '../styles/themeColors';\n\nexport default function StockChart({\n\tdata,\n\txAxisDisplayBy,\n\tisError,\n\tisLoadingData,\n}: StockChartProps) {\n\tconst formattedChartData: ChartData[] = data.map(\n\t\t({ Close, StartTime, StartDate }) => {\n\t\t\tconst formattedTime = formatStringByLength(StartTime, -6);\n\t\t\tconst formattedDate = formatStringByLength(StartDate, -5);\n\t\t\treturn {\n\t\t\t\tDate: formattedDate,\n\t\t\t\tTime: formattedTime,\n\t\t\t\tClose,\n\t\t\t};\n\t\t}\n\t);\n\n\treturn (\n\t\t<ResponsiveContainer width='90%' height={500}>\n\t\t\t<AreaChart\n\t\t\t\tmargin={{\n\t\t\t\t\ttop: 20,\n\t\t\t\t\tright: 10,\n\t\t\t\t\tleft: 10,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t}}\n\t\t\t\tdata={formattedChartData}\n\t\t\t\tstyle={{\n\t\t\t\t\tfilter: isError || isLoadingData ? 'opacity(0.30)' : '',\n\t\t\t\t\tcursor: 'crosshair',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CartesianGrid strokeDasharray='3 3' />\n\t\t\t\t<defs>\n\t\t\t\t\t<linearGradient id='colorUv' x1='0' y1='0' x2='0' y2='1'>\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset='40%'\n\t\t\t\t\t\t\tstopColor={THEME_COLORS.main_blue}\n\t\t\t\t\t\t\tstopOpacity={0.7}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset='90%'\n\t\t\t\t\t\t\tstopColor={THEME_COLORS.main_white}\n\t\t\t\t\t\t\tstopOpacity={0.1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</linearGradient>\n\t\t\t\t</defs>\n\t\t\t\t<XAxis\n\t\t\t\t\tdataKey={xAxisDisplayBy === 'date' ? 'Date' : 'Time'}\n\t\t\t\t\ttickMargin={5}\n\t\t\t\t\tfontSize={12}\n\t\t\t\t/>\n\t\t\t\t<YAxis\n\t\t\t\t\tdataKey='Close'\n\t\t\t\t\tdomain={['dataMin', 'dataMax']}\n\t\t\t\t\ttickCount={5}\n\t\t\t\t\ttickMargin={5}\n\t\t\t\t\tallowDecimals={true}\n\t\t\t\t\tfontSize={13}\n\t\t\t\t/>\n\t\t\t\t<Area\n\t\t\t\t\ttype='monotone'\n\t\t\t\t\tdataKey='Close'\n\t\t\t\t\tstroke={THEME_COLORS.stroke_blue}\n\t\t\t\t\tfill='url(#colorUv)'\n\t\t\t\t\tfillOpacity={0.4}\n\t\t\t\t/>\n\t\t\t\t{!isError && !isLoadingData && (\n\t\t\t\t\t<Tooltip isAnimationActive={false} content={CustomTooltip} />\n\t\t\t\t)}\n\t\t\t</AreaChart>\n\t\t</ResponsiveContainer>\n\t);\n}\n","import { ErrorModalProps } from '../../utils/interfaces';\nimport { StyledErrorModal } from '../../styles/styled';\n\nfunction ErrorModal({ error }: ErrorModalProps) {\n\treturn error ? (\n\t\t<StyledErrorModal>Oh no, something went wrong: {error}</StyledErrorModal>\n\t) : null;\n}\n\nexport default ErrorModal;\n","export default __webpack_public_path__ + \"static/media/spinner.3a4abdde.svg\";","import SpinnerSvg from '../../assets/spinner.svg';\nimport { StyledSvgImage } from '../../styles/styled';\n\nfunction Loader() {\n\treturn <StyledSvgImage src={SpinnerSvg} alt='loader spinner' />;\n}\n\nexport default Loader;\n","import { SyntheticEvent } from 'react';\n\nimport Loader from './UI/Loader';\n\nimport { TimeData, TimeToggleContainerProps } from '../utils/interfaces';\nimport { StyledTimeToggleContainer, StyledTimeButton } from '../styles/styled';\n\nconst TIME_DATA: TimeData[] = [\n\t{ timeUnits: 'Minutes', amount: '1', label: '1 Min' },\n\t{ timeUnits: 'Minutes', amount: '5', label: '5 Mins' },\n\t{ timeUnits: 'Hours', amount: '1', label: '1 Hour' },\n\t{ timeUnits: 'Hours', amount: '168', label: '1 Week' },\n];\n\nfunction TimeToggle({\n\tsetTimeData,\n\ttimeData,\n\tisLoadingData,\n}: TimeToggleContainerProps) {\n\tconst handleButtonClick = ({\n\t\tcurrentTarget,\n\t}: SyntheticEvent<HTMLButtonElement>) => {\n\t\tconst clickedButtonLabel = currentTarget.innerHTML;\n\t\tconst clickedButton = TIME_DATA.find(\n\t\t\t({ label }) => label === clickedButtonLabel\n\t\t);\n\n\t\tif (clickedButton && clickedButton.label !== timeData.label)\n\t\t\tsetTimeData(clickedButton);\n\t};\n\n\treturn (\n\t\t<StyledTimeToggleContainer>\n\t\t\t{TIME_DATA.map(({ label }) => {\n\t\t\t\tconst isButtonSelected = timeData.label === label;\n\t\t\t\treturn (\n\t\t\t\t\t<StyledTimeButton\n\t\t\t\t\t\tisSelected={isButtonSelected}\n\t\t\t\t\t\tisLoading={isButtonSelected && isLoadingData}\n\t\t\t\t\t\tkey={label}\n\t\t\t\t\t\tonClick={handleButtonClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLoadingData && isButtonSelected ? <Loader /> : label}\n\t\t\t\t\t</StyledTimeButton>\n\t\t\t\t);\n\t\t\t})}\n\t\t</StyledTimeToggleContainer>\n\t);\n}\n\nexport default TimeToggle;\n","import { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { ThemeProvider } from 'styled-components';\n\nimport Overview from './components/UI/Overview';\nimport StockChart from './components/StockChart';\nimport ErrorModal from './components/errors/ErrorModal';\nimport TimeToggle from './components/TimeToggle';\n\nimport { StyledMainContainer } from './styles/styled';\nimport { ResultData, TimeData } from './utils/interfaces';\nimport { THEME_COLORS } from './styles/themeColors';\nimport { setUrlParamsBy } from './utils/utils';\n\nfunction App() {\n\tconst [stockData, setStockData] = useState<ResultData[]>([]);\n\tconst [isLoadingData, setIsLoadingData] = useState<boolean>(true);\n\tconst [error, setError] = useState<string>('');\n\tconst [timeData, setTimeData] = useState<TimeData>({\n\t\ttimeUnits: 'Minutes',\n\t\tamount: '1',\n\t\tlabel: '1 Min',\n\t});\n\n\tconst fetchApiData = useCallback(async () => {\n\t\ttry {\n\t\t\tconst { data, status } = await axios.get<ResultData[]>(\n\t\t\t\tsetUrlParamsBy({\n\t\t\t\t\tprecision: timeData.timeUnits,\n\t\t\t\t\tperiod: timeData.amount,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tif (status === 200 && data.length) {\n\t\t\t\tsetStockData(() => data);\n\t\t\t\tsetIsLoadingData(() => false);\n\t\t\t\tsetError('');\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t\tsetError(error.message);\n\t\t\tsetIsLoadingData(false);\n\t\t}\n\t}, [timeData.amount, timeData.timeUnits]);\n\n\tuseEffect(() => {\n\t\tfetchApiData();\n\t}, [fetchApiData]);\n\n\treturn (\n\t\t<ThemeProvider theme={THEME_COLORS}>\n\t\t\t<StyledMainContainer>\n\t\t\t\t<ErrorModal error={error} />\n\t\t\t\t<Overview />\n\t\t\t\t<TimeToggle\n\t\t\t\t\tsetTimeData={setTimeData}\n\t\t\t\t\ttimeData={timeData}\n\t\t\t\t\tisLoadingData={isLoadingData}\n\t\t\t\t/>\n\t\t\t\t<StockChart\n\t\t\t\t\tdata={stockData}\n\t\t\t\t\tisLoadingData={isLoadingData}\n\t\t\t\t\tisError={!!error}\n\t\t\t\t\txAxisDisplayBy={\n\t\t\t\t\t\ttimeData.label && /week/gi.test(timeData.label) ? 'date' : 'time'\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</StyledMainContainer>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport {\n\tStyledCenteredDiv,\n\tStyledClickableSpan,\n\tStyledResponsiveContainer,\n} from '../../styles/styled';\n\nexport class ErrorBoundary extends React.Component {\n\tstate = { hasError: false };\n\n\tstatic getDerivedStateFromError(error: any) {\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error: any, errorInfo: any) {\n\t\tconsole.error(errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn (\n\t\t\t\t<StyledResponsiveContainer>\n\t\t\t\t\t<StyledCenteredDiv>\n\t\t\t\t\t\t<h1>OH no... the app has crashed :(</h1>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tTry to{' '}\n\t\t\t\t\t\t\t<StyledClickableSpan onClick={() => window.location.reload()}>\n\t\t\t\t\t\t\t\trefresh\n\t\t\t\t\t\t\t</StyledClickableSpan>{' '}\n\t\t\t\t\t\t\tthe page and see if it works now\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</StyledCenteredDiv>\n\t\t\t\t</StyledResponsiveContainer>\n\t\t\t);\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ErrorBoundary } from './components/errors/ErrorBoundary';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ErrorBoundary>\n\t\t\t<App />\n\t\t</ErrorBoundary>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}